// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/PC.hdl
/**
 * A 16-bit counter.
 * if      reset(t): out(t+1) = 0
 * else if load(t):  out(t+1) = in(t)
 * else if inc(t):   out(t+1) = out(t) + 1
 * else              out(t+1) = out(t)
 */
CHIP PC {
    IN in[16], reset, load, inc;
    OUT out[16];
    
    PARTS:
    //check if something needs to be changed in out register
    Or(a=load , b=reset , out=loadORreset );
    Or(a=loadORreset , b=inc , out=registerload );
    //feed register with final input from 2 Mux16 chips
    Register(in=muxzero , load=registerload , out=regout );

    //increment the register's output
    Inc16(in=regout , out=incr );

    //following the pc API if (load) we overide inc
    Mux16(a=incr , b=in , sel=load , out=incMUXload );

    //following the pc API if (reset) we overide load and inc
    Mux16(a=incMUXload , b=false , sel=reset , out=muxzero );
    
    //pipe the registers output to main output
    Or16(a=regout , b=false , out=out );
}